// // // import React, { useState, useEffect } from "react";
// // // import { GoogleMap, LoadScript, Marker, InfoWindow, DirectionsRenderer } from "@react-google-maps/api";
// // // import chargingStationImage from "../../assets/images/temp-campaign-picture.jpg";
// // // import "./index.css"; // Import custom CSS

// // // const mapStyles = {
// // //   height: "500px",
// // //   width: "100%",
// // // };

// // // interface ChargingStation {
// // //     name: string;
// // //     geometry: {
// // //       location: {
// // //         lat: () => number;
// // //         lng: () => number;
// // //       };
// // //     };
// // //   }

// // // const MapPage = () => {
// // //   const [chargingStations, setChargingStations] = useState<ChargingStation[]>([]);
// // //   const [map, setMap] = useState<google.maps.Map | null>(null);
// // //   const [currentLocation, setCurrentLocation] = useState<{ lat: number; lng: number }>({ lat: 3.139, lng: 101.6869 });
// // //   const [userLocation, setUserLocation] = useState<{ lat: number; lng: number } | null>(null);
// // //   const [selectedStation, setSelectedStation] = useState<ChargingStation | null>(null);
// // //   const [directionsResponse, setDirectionsResponse] = useState(null);
// // //   const [suggestMode, setSuggestMode] = useState(false);
// // //   const [suggestedMarker, setSuggestedMarker] = useState<{ lat: number; lng: number } | null>(null);
// // //   const [showRequestSection, setShowRequestSection] = useState(false);

// // //   const [formData, setFormData] = useState({
// // //     name: "",
// // //     description: "",
// // //     owner: "",
// // //     visitFrequency: "",
// // //     visitTime: [],
// // //     batteryLevel: "",
// // //     crowdfunding: "",
// // //   });

// // //   // Get user's current location
// // //   useEffect(() => {
// // //     if (navigator.geolocation) {
// // //       navigator.geolocation.getCurrentPosition((position) => {
// // //         const userLoc = { lat: position.coords.latitude, lng: position.coords.longitude };
// // //         setUserLocation(userLoc);
// // //         setCurrentLocation(userLoc);
// // //       });
// // //     }
// // //   }, []);

// // //   const handleMarkerClick = (station: ChargingStation) => {
// // //     setSelectedStation(station);
// // //   };

// // //   const handleMapClick = (event: google.maps.MapMouseEvent) => {
// // //     if (suggestMode) {
// // //       setSuggestedMarker({ lat: event.latLng!.lat(), lng: event.latLng!.lng() });
// // //     }
// // //   };

// // //   const toggleRequestSection = () => {
// // //     setShowRequestSection((prev) => !prev);
// // //   };

// // //   return (
// // //     <div className="map-page">
// // //       <div className="top-section">
// // //         <input type="text" placeholder="Search for charging stations..." className="search-bar" />
// // //         <div className="filter-options">
// // //           <button className="filter-button">Filter by Distance</button>
// // //           <button className="filter-button">Filter by Type</button>
// // //         </div>
// // //       </div>

// // //       <div className="label-section">
// // //         <button onClick={() => setSuggestMode(false)} className={`toggle-button ${!suggestMode && "active"}`}>
// // //           Nearby Charging Stations
// // //         </button>
// // //         <button onClick={() => setSuggestMode(true)} className={`toggle-button ${suggestMode && "active"}`}>
// // //           Suggest New Charging Station
// // //         </button>
// // //       </div>

// // //       {/* <LoadScript googleMapsApiKey={import.meta.env.VITE_GOOGLE_MAPS_API_KEY} libraries={["places"]}>
// // //         <GoogleMap
// // //           mapContainerStyle={mapStyles}
// // //           zoom={12}
// // //           center={currentLocation}
// // //           onClick={handleMapClick}
// // //           onLoad={(map) => setMap(map)}
// // //         >
// // //           {chargingStations.map((station, index) => (
// // //             <Marker
// // //               key={index}
// // //               position={{ lat: station.geometry.location.lat(), lng: station.geometry.location.lng() }}
// // //               onClick={() => handleMarkerClick(station)}
// // //               icon={{ url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png" }}
// // //             />
// // //           ))}
// // //           {userLocation && (
// // //             <Marker
// // //               position={userLocation}
// // //               icon={{ url: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png" }}
// // //               title="You are here"
// // //             />
// // //           )}
// // //           {suggestedMarker && suggestMode && (
// // //             <Marker
// // //               position={suggestedMarker}
// // //               icon={{ url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png" }}
// // //               title="Suggested Location"
// // //             />
// // //           )}
// // //           {directionsResponse && <DirectionsRenderer directions={directionsResponse} />}
// // //           {selectedStation && (
// // //             <InfoWindow
// // //               position={{ lat: selectedStation.geometry.location.lat(), lng: selectedStation.geometry.location.lng() }}
// // //               onCloseClick={() => setSelectedStation(null)}
// // //             >
// // //               <div>
// // //                 <h3>{selectedStation.name}</h3>
// // //                <a
// // //                   href={`https://www.google.com/maps/dir/?api=1&origin=${userLocation?.lat || 0},${userLocation?.lng || 0}&destination=${selectedStation.geometry.location.lat()},${selectedStation.geometry.location.lng()}&travelmode=driving`}
// // //                 >
// // //                   Get Directions
// // //                 </a>
// // //               </div>
// // //             </InfoWindow>
// // //           )}
// // //         </GoogleMap>
// // //       </LoadScript> */}

// // //       {/* Conditionally render LoadScript only if window.google is undefined */}
// // //       {window.google === undefined ? (
// // //         <LoadScript googleMapsApiKey={import.meta.env.VITE_GOOGLE_MAPS_API_KEY} libraries={["places"]}>
// // //           <GoogleMap
// // //             mapContainerStyle={mapStyles}
// // //             zoom={12}
// // //             center={currentLocation}
// // //             onClick={handleMapClick}
// // //             onLoad={(map) => setMap(map)}
// // //           >
// // //             {renderMarkers()}
// // //           </GoogleMap>
// // //         </LoadScript>
// // //       ) : (
// // //         <GoogleMap
// // //           mapContainerStyle={mapStyles}
// // //           zoom={12}
// // //           center={currentLocation}
// // //           onClick={handleMapClick}
// // //           onLoad={(map) => setMap(map)}
// // //         >
// // //           {renderMarkers()}
// // //         </GoogleMap>
// // //       )}

// // //       <div className={`expandable-section ${showRequestSection ? "expanded" : ""}`}>
// // //         <button className="expand-button" onClick={toggleRequestSection}>
// // //           {showRequestSection ? "Collapse" : "Expand"} Community Requests
// // //         </button>
// // //         <div className="section-content">
// // //           <div className="nearby-section">
// // //             <h2>Nearby Charging Stations</h2>
// // //             {/* List or markers for nearby charging stations */}
// // //           </div>
// // //           <div className="request-section">
// // //             <h2>Community EV Station Requests</h2>
// // //             {/* Display user requests and option to vote or create new request */}
// // //           </div>
// // //         </div>
// // //       </div>
// // //     </div>
// // //   );
// // // };

// // // // Separate markers rendering logic
// // // function renderMarkers() {
// // //     return (
// // //       <>
// // //         {chargingStations.map((station, index) => (
// // //           <Marker
// // //             key={index}
// // //             position={{ lat: station.geometry.location.lat(), lng: station.geometry.location.lng() }}
// // //             onClick={() => handleMarkerClick(station)}
// // //             icon={{ url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png" }}
// // //           />
// // //         ))}
// // //         {userLocation && (
// // //           <Marker
// // //             position={userLocation}
// // //             icon={{ url: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png" }}
// // //             title="You are here"
// // //           />
// // //         )}
// // //         {suggestedMarker && suggestMode && (
// // //           <Marker
// // //             position={suggestedMarker}
// // //             icon={{ url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png" }}
// // //             title="Suggested Location"
// // //           />
// // //         )}
// // //         {directionsResponse && <DirectionsRenderer directions={directionsResponse} />}
// // //         {selectedStation && (
// // //           <InfoWindow
// // //             position={{
// // //               lat: selectedStation.geometry.location.lat(),
// // //               lng: selectedStation.geometry.location.lng(),
// // //             }}
// // //             onCloseClick={() => setSelectedStation(null)}
// // //           >
// // //             <div>
// // //               <h3>{selectedStation.name}</h3>
// // //               <a
// // //                 href={`https://www.google.com/maps/dir/?api=1&origin=${userLocation?.lat || 0},${
// // //                   userLocation?.lng || 0
// // //                 }&destination=${selectedStation.geometry.location.lat()},${selectedStation.geometry.location.lng()}&travelmode=driving`}
// // //               >
// // //                 Get Directions
// // //               </a>
// // //             </div>
// // //           </InfoWindow>
// // //         )}
// // //       </>
// // //     );
// // //   }
// // // };


// // // export default MapPage;

// // import React, { useState, useEffect } from "react";
// // import { GoogleMap, LoadScript, Marker, InfoWindow, DirectionsRenderer } from "@react-google-maps/api";
// // import chargingStationImage from "../../assets/images/temp-campaign-picture.jpg";
// // import "./index.css"; // Import custom CSS

// // const mapStyles = {
// //   height: "500px",
// //   width: "100%",
// // };

// // interface ChargingStation {
// //   name: string;
// //   geometry: {
// //     location: {
// //       lat: () => number;
// //       lng: () => number;
// //     };
// //   };
// // }

// // const MapPage = () => {
// //   const [chargingStations, setChargingStations] = useState<ChargingStation[]>([]);
// //   const [map, setMap] = useState<google.maps.Map | null>(null);
// //   const [currentLocation, setCurrentLocation] = useState<{ lat: number; lng: number }>({ lat: 3.139, lng: 101.6869 });
// //   const [userLocation, setUserLocation] = useState<{ lat: number; lng: number } | null>(null);
// //   const [selectedStation, setSelectedStation] = useState<ChargingStation | null>(null);
// //   const [directionsResponse, setDirectionsResponse] = useState(null);
// //   const [suggestMode, setSuggestMode] = useState(false);
// //   const [suggestedMarker, setSuggestedMarker] = useState<{ lat: number; lng: number } | null>(null);
// //   const [showRequestSection, setShowRequestSection] = useState(false);

// //   const [formData, setFormData] = useState({
// //     name: "",
// //     description: "",
// //     owner: "",
// //     visitFrequency: "",
// //     visitTime: [],
// //     batteryLevel: "",
// //     crowdfunding: "",
// //   });

// //   // Get user's current location
// //   useEffect(() => {
// //     if (navigator.geolocation) {
// //       navigator.geolocation.getCurrentPosition((position) => {
// //         const userLoc = { lat: position.coords.latitude, lng: position.coords.longitude };
// //         setUserLocation(userLoc);
// //         setCurrentLocation(userLoc);
// //       });
// //     }
// //   }, []);

// //   const handleMarkerClick = (station: ChargingStation) => {
// //     setSelectedStation(station);
// //   };

// //   const handleMapClick = (event: google.maps.MapMouseEvent) => {
// //     if (suggestMode) {
// //       setSuggestedMarker({ lat: event.latLng!.lat(), lng: event.latLng!.lng() });
// //     }
// //   };

// //   const toggleRequestSection = () => {
// //     setShowRequestSection((prev) => !prev);
// //   };

// //   return (
// //     <div className="map-page">
// //       <div className="top-section">
// //         <input type="text" placeholder="Search for charging stations..." className="search-bar" />
// //         <div className="filter-options">
// //           <button className="filter-button">Filter by Distance</button>
// //           <button className="filter-button">Filter by Type</button>
// //         </div>
// //       </div>

// //       <div className="label-section">
// //         <button onClick={() => setSuggestMode(false)} className={`toggle-button ${!suggestMode && "active"}`}>
// //           Nearby Charging Stations
// //         </button>
// //         <button onClick={() => setSuggestMode(true)} className={`toggle-button ${suggestMode && "active"}`}>
// //           Suggest New Charging Station
// //         </button>
// //       </div>

// //       {/* Conditionally render LoadScript only if window.google is undefined */}
// //       {window.google === undefined ? (
// //         <LoadScript googleMapsApiKey={import.meta.env.VITE_GOOGLE_MAPS_API_KEY} libraries={["places"]}>
// //           <GoogleMap
// //             mapContainerStyle={mapStyles}
// //             zoom={12}
// //             center={currentLocation}
// //             onClick={handleMapClick}
// //             onLoad={(map) => setMap(map)}
// //           >
// //             {renderMarkers()}
// //           </GoogleMap>
// //         </LoadScript>
// //       ) : (
// //         <GoogleMap
// //           mapContainerStyle={mapStyles}
// //           zoom={12}
// //           center={currentLocation}
// //           onClick={handleMapClick}
// //           onLoad={(map) => setMap(map)}
// //         >
// //           {renderMarkers()}
// //         </GoogleMap>
// //       )}

// //       <div className={`expandable-section ${showRequestSection ? "expanded" : ""}`}>
// //         <button className="expand-button" onClick={toggleRequestSection}>
// //           {showRequestSection ? "Collapse" : "Expand"} Community Requests
// //         </button>
// //         <div className="section-content">
// //           <div className="nearby-section">
// //             <h2>Nearby Charging Stations</h2>
// //           </div>
// //           <div className="request-section">
// //             <h2>Community EV Station Requests</h2>
// //           </div>
// //         </div>
// //       </div>
// //     </div>
// //   );

// //   // Separate markers rendering logic
// //   function renderMarkers() {
// //     return (
// //       <>
// //         {chargingStations.map((station, index) => (
// //           <Marker
// //             key={index}
// //             position={{ lat: station.geometry.location.lat(), lng: station.geometry.location.lng() }}
// //             onClick={() => handleMarkerClick(station)}
// //             icon={{ url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png" }}
// //           />
// //         ))}
// //         {userLocation && (
// //           <Marker
// //             position={userLocation}
// //             icon={{ url: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png" }}
// //             title="You are here"
// //           />
// //         )}
// //         {suggestedMarker && suggestMode && (
// //           <Marker
// //             position={suggestedMarker}
// //             icon={{ url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png" }}
// //             title="Suggested Location"
// //           />
// //         )}
// //         {directionsResponse && <DirectionsRenderer directions={directionsResponse} />}
// //         {selectedStation && (
// //           <InfoWindow
// //             position={{
// //               lat: selectedStation.geometry.location.lat(),
// //               lng: selectedStation.geometry.location.lng(),
// //             }}
// //             onCloseClick={() => setSelectedStation(null)}
// //           >
// //             <div>
// //               <h3>{selectedStation.name}</h3>
// //               <a
// //                 href={`https://www.google.com/maps/dir/?api=1&origin=${userLocation?.lat || 0},${
// //                   userLocation?.lng || 0
// //                 }&destination=${selectedStation.geometry.location.lat()},${selectedStation.geometry.location.lng()}&travelmode=driving`}
// //               >
// //                 Get Directions
// //               </a>
// //             </div>
// //           </InfoWindow>
// //         )}
// //       </>
// //     );
// //   }
// // };

// // export default MapPage;

// import React, { useState, useEffect } from "react";
// import { GoogleMap, LoadScript, Marker, InfoWindow, DirectionsRenderer } from "@react-google-maps/api";
// import chargingStationImage from "../../assets/images/temp-campaign-picture.jpg";
// import "./index.css";

// const mapStyles = {
//   height: "calc(100vh - 220px)", // Adjusted for the sections on top and bottom
//   width: "100%",
// };

// interface ChargingStation {
//   name: string;
//   geometry: {
//     location: {
//       lat: () => number;
//       lng: () => number;
//     };
//   };
// }

// const MapPage = () => {
//   const [chargingStations, setChargingStations] = useState<ChargingStation[]>([]);
//   const [map, setMap] = useState<google.maps.Map | null>(null);
//   const [currentLocation, setCurrentLocation] = useState<{ lat: number; lng: number }>({ lat: 3.139, lng: 101.6869 });
//   const [userLocation, setUserLocation] = useState<{ lat: number; lng: number } | null>(null);
//   const [selectedStation, setSelectedStation] = useState<ChargingStation | null>(null);
//   const [directionsResponse, setDirectionsResponse] = useState(null);
//   const [suggestMode, setSuggestMode] = useState(false);
//   const [suggestedMarker, setSuggestedMarker] = useState<{ lat: number; lng: number } | null>(null);
//   const [showRequestSection, setShowRequestSection] = useState(false);

//   useEffect(() => {
//     if (navigator.geolocation) {
//       navigator.geolocation.getCurrentPosition((position) => {
//         const userLoc = { lat: position.coords.latitude, lng: position.coords.longitude };
//         setUserLocation(userLoc);
//         setCurrentLocation(userLoc);
//       },
//     );
//     }
//   }, []);

//   const handleMarkerClick = (station: ChargingStation) => {
//     setSelectedStation(station);
//   };

//   const handleMapClick = (event: google.maps.MapMouseEvent) => {
//     if (suggestMode) {
//       setSuggestedMarker({ lat: event.latLng!.lat(), lng: event.latLng!.lng() });
//     }
//   };

//   const toggleRequestSection = () => {
//     setShowRequestSection((prev) => !prev);
//   };

//   return (
//     <div className="map-page">
//       <div className="top-section">
//         <input type="text" placeholder="Search for charging stations..." className="search-bar" />
//         <button className="filter-icon">⚙️</button>
//       </div>

//       <div className="quick-labels">
//         {["Grocer", "Coffee", "Shopping", "Restaurant", "Others"].map((label) => (
//           <button key={label} className="label-button">
//             {label}
//           </button>
//         ))}
//       </div>

//       {/* Conditionally render LoadScript only if window.google is undefined */}
//       {window.google === undefined ? (
//         <LoadScript googleMapsApiKey={import.meta.env.VITE_GOOGLE_MAPS_API_KEY} libraries={["places"]}>
//           <GoogleMap
//             mapContainerStyle={mapStyles}
//             zoom={12}
//             center={currentLocation}
//             onClick={handleMapClick}
//             onLoad={(map) => setMap(map)}
//           >
//             {renderMarkers()}
//           </GoogleMap>
//         </LoadScript>
//       ) : (
//         <GoogleMap
//           mapContainerStyle={mapStyles}
//           zoom={12}
//           center={currentLocation}
//           onClick={handleMapClick}
//           onLoad={(map) => setMap(map)}
//         >
//           {renderMarkers()}
//         </GoogleMap>
//       )}

//       <div className={`expandable-section ${showRequestSection ? "expanded" : ""}`}>
//         <button className="expand-button" onClick={toggleRequestSection}>
//           {showRequestSection ? "Collapse" : "Expand"} Details
//         </button>
//         <div className="section-content">
//           <div className="nearby-section">
//             <h2>Nearby Stations</h2>
//           </div>
//           <div className="request-section">
//             <h2>Station Requests</h2>
//           </div>
//         </div>
//       </div>
//     </div>
//   );

//   function renderMarkers() {
//     return (
//       <>
//         {chargingStations.map((station, index) => (
//           <Marker
//             key={index}
//             position={{ lat: station.geometry.location.lat(), lng: station.geometry.location.lng() }}
//             onClick={() => handleMarkerClick(station)}
//             icon={{ url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png" }}
//           />
//         ))}
//         {userLocation && (
//           <Marker
//             position={userLocation}
//             icon={{ url: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png" }}
//             title="You are here"
//           />
//         )}
//         {suggestedMarker && suggestMode && (
//           <Marker
//             position={suggestedMarker}
//             icon={{ url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png" }}
//             title="Suggested Location"
//           />
//         )}
//         {directionsResponse && <DirectionsRenderer directions={directionsResponse} />}
//         {selectedStation && (
//           <InfoWindow
//             position={{
//               lat: selectedStation.geometry.location.lat(),
//               lng: selectedStation.geometry.location.lng(),
//             }}
//             onCloseClick={() => setSelectedStation(null)}
//           >
//             <div>
//               <h3>{selectedStation.name}</h3>
//               <a
//                 href={`https://www.google.com/maps/dir/?api=1&origin=${userLocation?.lat || 0},${
//                   userLocation?.lng || 0
//                 }&destination=${selectedStation.geometry.location.lat()},${selectedStation.geometry.location.lng()}&travelmode=driving`}
//               >
//                 Get Directions
//               </a>
//             </div>
//           </InfoWindow>
//         )}
//       </>
//     );
//   }
// };

// export default MapPage;

import React, { useState, useEffect } from "react";
import { GoogleMap, LoadScript, Marker, InfoWindow, DirectionsRenderer } from "@react-google-maps/api";
import "./index.css";

const mapStyles: React.CSSProperties = {
  height: "100vh", // Fullscreen height
  width: "100vw", // Fullscreen width
  position: "fixed", // Fixed position to cover the background
  top: 0,
  left: 0,
};

interface ChargingStation {
  name: string;
  geometry: {
    location: {
      lat: () => number;
      lng: () => number;
    };
  };
}

const MapPage = () => {
  const [chargingStations, setChargingStations] = useState<ChargingStation[]>([]);
  const [map, setMap] = useState<google.maps.Map | null>(null);
  const [currentLocation, setCurrentLocation] = useState<{ lat: number; lng: number }>({ lat: 3.139, lng: 101.6869 });
  const [userLocation, setUserLocation] = useState<{ lat: number; lng: number } | null>(null);
  const [selectedStation, setSelectedStation] = useState<ChargingStation | null>(null);
  const [directionsResponse, setDirectionsResponse] = useState(null);
  const [suggestMode, setSuggestMode] = useState(false);
  const [suggestedMarker, setSuggestedMarker] = useState<{ lat: number; lng: number } | null>(null);
  const [showRequestSection, setShowRequestSection] = useState(false);

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition((position) => {
        const userLoc = { lat: position.coords.latitude, lng: position.coords.longitude };
        setUserLocation(userLoc);
        setCurrentLocation(userLoc);
      });
    }
  }, []);

  const handleMarkerClick = (station: ChargingStation) => {
    setSelectedStation(station);
  };

  const handleMapClick = (event: google.maps.MapMouseEvent) => {
    if (suggestMode) {
      setSuggestedMarker({ lat: event.latLng!.lat(), lng: event.latLng!.lng() });
    }
  };

  const toggleRequestSection = () => {
    setShowRequestSection((prev) => !prev);
  };

  return (
    <div className="map-page">
      <div className="top-section">
        <input type="text" placeholder="Search for charging stations..." className="search-bar" />
        <button className="filter-icon">⚙️</button>
      </div>

      <div className="quick-labels">
        {["Grocer", "Coffee", "Shopping", "Restaurant", "Others"].map((label) => (
          <button key={label} className="label-button">
            {label}
          </button>
        ))}
      </div>

      {window.google === undefined ? (
        <LoadScript googleMapsApiKey={import.meta.env.VITE_GOOGLE_MAPS_API_KEY} libraries={["places"]}>
          <GoogleMap
            mapContainerStyle={mapStyles}
            zoom={12}
            center={currentLocation}
            onClick={handleMapClick}
            onLoad={(map) => setMap(map)}
          >
            {renderMarkers()}
          </GoogleMap>
          
        </LoadScript>
      ) : (
        <GoogleMap
          mapContainerStyle={mapStyles}
          zoom={12}
          center={currentLocation}
          onClick={handleMapClick}
          onLoad={(map) => setMap(map)}
        >
          {renderMarkers()}
        </GoogleMap>
      )}

      <div className={`expandable-section ${showRequestSection ? "expanded" : ""}`}>
        <button className="expand-button" onClick={toggleRequestSection}>
          {showRequestSection ? "Collapse" : "Expand"} Details
        </button>
        <div className="section-content">
          <div className="nearby-section">
            <h2>Nearby Stations</h2>
          </div>
          <div className="request-section">
            <h2>Station Requests</h2>
          </div>
        </div>
      </div>
    </div>
  );

  function renderMarkers() {
    return (
      <>
        {chargingStations.map((station, index) => (
          <Marker
            key={index}
            position={{ lat: station.geometry.location.lat(), lng: station.geometry.location.lng() }}
            onClick={() => handleMarkerClick(station)}
            icon={{ url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png" }}
          />
        ))}
        {userLocation && (
          <Marker
            position={userLocation}
            icon={{ url: "https://maps.google.com/mapfiles/ms/icons/blue-dot.png" }}
            title="You are here"
          />
        )}
        {suggestedMarker && suggestMode && (
          <Marker
            position={suggestedMarker}
            icon={{ url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png" }}
            title="Suggested Location"
          />
        )}
        {directionsResponse && <DirectionsRenderer directions={directionsResponse} />}
        {selectedStation && (
          <InfoWindow
            position={{
              lat: selectedStation.geometry.location.lat(),
              lng: selectedStation.geometry.location.lng(),
            }}
            onCloseClick={() => setSelectedStation(null)}
          >
            <div>
              <h3>{selectedStation.name}</h3>
              <a
                href={`https://www.google.com/maps/dir/?api=1&origin=${userLocation?.lat || 0},${
                  userLocation?.lng || 0
                }&destination=${selectedStation.geometry.location.lat()},${selectedStation.geometry.location.lng()}&travelmode=driving`}
              >
                Get Directions
              </a>
            </div>
          </InfoWindow>
        )}
      </>
    );
  }
};

export default MapPage;
